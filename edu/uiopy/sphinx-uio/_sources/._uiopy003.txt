.. !split

There is impact of teaching Python
----------------------------------

The world is changed only when people do new things. When students
learn Python, they bring this knowledge to later courses and then to
industry. Their knowledge automatically creates a demand for using the
tools they prefer.  Many companies in the Oslo region that apply
Python today discovered the language through new employees who had
picked up Python in the scripting course. Similarly, students create
Python examples and projects in other courses and thereby attract
attention to the tool and its applications.

The science education at the University of Oslo puts much emphasis on
learning other languages, in particular MATLAB, R, C, C++, and
Fortran.  We teach (a subset of) Python in a way that eases the
transition to and from MATLAB.  For high performance we emphasize
reusing Fortran and C libraries from Python or migrating slow Python
code to compiled languages.  Our experience shows that users who gain
a good knowledge of Python tend to prefer that language and do as much
as possible in Python before the quest for high performance demands
using compiled languages.  It seems that many students and professors,
when their knowledge of Python is at the level of their MATLAB skills,
steadily drift to do most of their work in Python. The numerical
functionality in Python is not superior to MATLAB, so this drift is
more rooted in Python's clear syntax, powerful software engineering
tools, easy integration with Fortran and C/C++,
and rich set of libraries for non-numerical tasks.

The described trend among students and professors are also found in
industry: Python steadily eats of the MATLAB market because people find
the language stronger and more convenient. Our efforts in teaching and
professional use of Python contribute to the observed exponential
growth.

