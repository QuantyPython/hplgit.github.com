TITLE: Examples of scientific reports in different formats
AUTHOR: Hans Petter Langtangen at Simula & Univ. of Oslo
DATE: today

The purpose of this page is to exemplify how to write scientific
reports in various formats: LaTeX PDF, HTML, Sphinx, IPython notebook,
HTML blog post, etc.

# #ifndef CODE
======= Formats generated from hand-written LaTeX or HTML =======

 * "PDF": "_static/report_plain.pdf" report made from plain hand-written "LaTeX source": "_static/report_latex.html"
 * "Plain HTML": "_static/report_html.html" report with primitive text-based math, made from hand-written "HTML source": "_static/report_html.html.html"
 * "HTML with LaTeX math": "_static/report_mathjax.html" made from hand-written "MathJax-extended HTML source": "_static/report_mathjax.html.html"

#What about Microsoft Word? Don't use it!

======= Reports generated from plain text in "DocOnce": "https://github.com/hplgit/doconce" format =======

!bbox
"Show how all the DocOnce formats are generated in detail": "index_with_doconce_commands.html"!
!ebox

# #endif

===== PDF via LaTeX =====

"The classical LaTeX-style report format": "_static/report_plain.pdf"
is widely used throughout mathematical sciences. This PDF version was made
from hand-written "DocOnce source": "_static/report.do.txt.html",
first translated to LaTeX source code and then compiled to PDF.

# #ifdef CODE
The necessary steps in this process go as follows.

!bc sys
# Compile DocOnce to LaTeX format
doconce format pdflatex report --latex_code_style=vrb --device=paper

# Compile LaTeX to PDF
rm -f *.aux
pdflatex report
bibtex report
pdflatex report
!ec
# #endif

Here is another version of the same report, this time in a
fresher, more modern "PDF format": "_static/report.pdf" for *electronic view*
where URLs and references are hyperlinks. This PDF file is made from
"LaTeX source": "_static/report.tex.html" generated from "DocOnce source": "_static/report.do.txt.html".

# #ifdef CODE
The steps to produce the "PDF file": "_static/report.pdf" are listed below.
First, LaTeX code must be generated by

!bc sys
doconce format pdflatex report --latex_font=palatino \
        --latex_admon=yellowicon '--latex_admon_color=yellow!5'
        --latex_fancy_header --latex_code_style=pyg
        --latex_section_headings=blue --latex_colored_table_rows=blue
!ec
The `doconce format` program has a lot of options
(see `doconce format --help`). Here we
fine-tune the way admonitions are typeset (admonitions are boxes for
warnings, tips, notes, questions, summaries, etc. - DocOnce has
strong support for such boxes and many alternative layouts,
in some formats, especially LaTeX,
HTML, and Sphinx). In this particular case we also specify blue
headings and blue-and-white rows in tables.
Blocks of computer code is typeset with the Pygments tool
(`--latex_code_style=pyg`) through the LaTeX package
`minted`.

By default, the standard LaTeX `abstract` environment is used for the
initial summary/abstract. We can easily replace the `abstract` environment
by, e.g., a `quote` environment using the `doconce replace` command
for text substitution:

!bc sys
doconce replace 'begin{abstract}' 'begin{quote}\small' report.p.tex
doconce replace 'end{abstract}' 'end{quote}' report.p.tex
!ec
More sophisticated automatic editing of the generated text from
`doconce format` can make use of `doconce subst`, which performs edits
via regular expressions. In this way, one can tailor the LaTeX
source (or HTML, Sphinx, whatever source) to special needs for
a document. Everytime the translation from DocOnce to the particular
format takes place, automatic edits of the resulting text are also run.

Finally, we must run the ordinary LaTeX commands on the LaTeX file `report.tex`:
!bc
rm -f report.aux
# Run pdflatex: the pygments environment for code requires
# use of the -shell-escape option
pdflatex -shell-escape report
bibtex report
pdflatex -shell-escape report
!ec
# #endif

"PDF for printing": "_static/report_4printing.pdf" (where linked URLs appear as footnotes) made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
The option `--device=paper` makes all URL appear as footnotes, which
makes them visible in a paper version (they are still clickable in
the text, but the link text is in black, as the rest of the text - the
footnote superscript indicates the word to be clicked).

!bc sys
doconce format pdflatex report --device=paper \
       --latex_admon=graybox1 --latex_font=palatino \
       --latex_title_layout=titlepage \
       --latex_code_style=pyg

rm -f report.aux
pdflatex -shell-escape report
bibtex report
pdflatex -shell-escape report
!ec
# #endif

"PDF for viewing on a phone": "_static/report_4phone.pdf" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
DocOnce can generate LaTeX for A4 or A6 paper size, if desired. The A6
size is good for smart phones. Here we also change the LaTeX font
to Palatino (`--latex_font=helvetica` is another possibility).

!bc sys
doconce format pdflatex report --latex_papersize=a6 \
        --latex_font=palatino --latex_code_style=pyg
rm -f report.aux
pdflatex -shell-escape report
bibtex report
pdflatex -shell-escape report
!ec
# #endif

"PDF with another typesetting of code blocks": "_static/report_lst.pdf" (yellow background) made from "LaTeX source": "_static/report.tex.html" generated from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format pdflatex report --latex_papersize=a4 --latex_font=helvetica --latex_code_style=lst-yellow2

rm -f *.aux
pdflatex report
bibtex report
pdflatex report
!ec
# #endif


===== Sphinx documents =====

The Sphinx documentation system is very popular for creating online
documents with fancy and attractive layouts.

"Sphinx default layout": "_static/sphinx-default/index.html" made from "Sphinx-extended reStructuredText source": "_static/report_sphinx.rst.html" generated from "DocOnce": "_static/report.do.txt.html". Other layouts are XXXXX

# #ifdef CODE
DocOnce can easily generate a lot of various Sphinx styles (see all
the names above). For style `X` (`pyramid`,`redcloud`, etc.) one writes

!bc sys
doconce format sphinx report
doconce sphinx_dir theme=X report
python automake_sphinx.py
!ec
Sphinx documents need a special directory, by default called `sphinx-rootdir`,
which is automatically generated by the `doconce sphinx_dir` command.
The automatically generated
`automake_sphinx.py` script (by the `doconce sphinx_dir` command)
copies necessary files to the Sphinx
directory and runs the necessary commands to compile the Sphinx
document to HTML format.
# #endif

===== HTML documents =====

=== Simple styles ===

"HTML with the blueish style": "_static/report_blueish.html" made from "DocOnce source": "_static/report.do.txt.html" (see "HTML code": "_static/report_blueish.html.html")

# #ifdef CODE
!bc sys
doconce format html report
!ec
# #endif

"HTML with the blueish2 style": "_static/report_blueish2.html" (same as blueish style unless pygments is turned off, then the code style is different, and admonitions has apricot default background color) made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=blueish2 --pygments_html_style=off
!ec
# #endif

"HTML with the bloodish style": "_static/report_bloodish.html" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=bloodish
!ec
# #endif

"HTML with tactile-black style": "_static/report_tactile-black.html" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=tactile-gray
!ec
# #endif

"HTML with tactile-red style": "_static/report_tactile-red.html" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=tactile-red
!ec
# #endif

"HTML with rossant style": "_static/report_rossant.html" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=rossant
!ec
# #endif

"HTML with Architects+Daughter Google font and the bloodish style": "_static/report_bloodish_Architects_Daughter.html " made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=bloodish --html_body_font=Architects+Daughter --html_heading_font=Architects+Daughter
!ec
# #endif

"HTML with Clicker+Script Google font and the bloodish style": "_static/report_bloodish_Clicker_Script.html " made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=bloodish --html_body_font=Clicker+Script --html_heading_font=Clicker+Script
!ec
# #endif

# #ifdef EXTRA
"HTML with Stalemate Google font and the bloodish style": "_static/report_bloodish_Stalemate.html" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=bloodish --html_body_font=Stalemate --html_heading_font=Stalemate
!ec
# #endif
# #endif

=== Solarized styles ===

The "solarized color style": "http://ethanschoonover.com/solarized" for
online documents has received much attention. Below are some examples
on DocOnce support for this color style.

"HTML with with the solarized style": "_static/report_solarized.html" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=solarized
!ec
# #endif

"HTML with with the solarized_dark style": "_static/report_solarized_dark.html" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=solarized_dark
!ec
# #endif

"HTML with with the solarized2_light style": "_static/report_solarized2_light.html" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=solarized2_light
!ec
# #endif

"HTML with with the solarized2_dark style": "_static/report_solarized2_dark.html" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=solarized2_dark
!ec
# #endif

"HTML with with the solarized3_light style": "_static/report_solarized3_light.html" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=solarized3_light
!ec
# #endif

"HTML with with the solarized3_dark style": "_static/report_solarized3_dark.html" made from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report --html_style=solarized3_dark
!ec
# #endif

"HTML with with the solarized_box html template": "_static/report_solarized_box.html" made from "DocOnce source": "_static/report.do.txt.html" with a "template file": "_static/template_solarized_box_yellow.html.html" (slight edit of a "DocOnce template": "https://github.com/hplgit/doconce/tree/master/bundled/html_styles/style_solarized_box")

# #ifdef CODE
!bc sys
doconce format html report --html_style=solarized --html_template=template_solarized_box_yellow.html
!ec
# #endif

=== Bootstrap styles ===

DocOnce supports a range of HTML styles based on the "Bootstrap": "http://getbootstrap.com/"
framework. Such styles are seen all over the Internet and have a lot
of functionality, e.g., responsive pages for smart phones and large
screens. Here are some Bootstrap-based HTML styles:
"plain bootstrap": "_static/report_bootstrap.html" made from "DocOnce source": "_static/report.do.txt.html", "bloodish": "_static/report_bootstrap_bloodish.html", "FlatUI": "_static/report_bootstrap_FlatUI.html", "bluegray": "_static/report_bootstrap_bluegray.html". And here are some
"Bootswatch": "http://bootswatch.com/"
styles: "cosmo": "_static/report_bootswatch_cosmo.html",
"journal": "_static/report_bootswatch_journal.html",
"readable": "_static/report_bootswatch_readable.html",
"cyborg": "_static/report_bootswatch_cyborg.html".


# #ifdef CODE
!bc sys
style=bootstrap
doconce format html report --html_style=$style --pygments_html_style=default --html_admon=bootstrap_alert --html_output=report_${style} --keep_pygments_html_bg --html_code_style=inherit --html_pre_style=inherit
doconce split_html report_$style.html
!ec
The other `style` values are `bootswatch_cosmo`, `bootswatch_journal`,
`bootswatch_readable`, and `bootstrap_bloodish` (many more exist,
see `doconce format --help` and look for the option `--html_style`).

The dark `bootswatch_cyborg` style is generated by

!bc
style=bootswatch_cyborg
doconce format html report --html_style=$style --pygments_html_style=monokai --html_admon=bootstrap_alert --html_output=report_${style} --keep_pygments_html_bg --html_code_style=inherit --html_pre_style=inherit
doconce split_html report_$style.html
!ec
It is recommended to use this setting of the Pygments style (`monokai`)
for all the dark Bootswatch styles.
# #endif

"HTML Vagrant style": "_static/report_vagrant.html" made from "DocOnce source": "_static/report.do.txt.html" with a "template file": "_static/template_vagrant.html.html"

# #ifdef CODE
!bc sys
# Copy the style to the current working dir
cp -r /path/to/doconce/root/bundled/html_styles/style_vagrant/template_vagrant.html .
# Customize the template (perhaps easier in an interactive editor...)
doconce replace LogoWord 'DiffEq' template_vagrant.html
doconce replace withSubWord 'Project' template_vagrant.html
doconce replace '<a href="">GO TO 1</a>' '<a href="http://wikipedia.org">Wikipedia</a>' template_vagrant.html
doconce replace '<a href="">GO TO 2</a>' '<a href="http://wolframalpha.com">WolframAlpha</a>' template_vagrant.html
doconce subst '<!-- footer --> Here .+' 'H. P. Langtangen &copy; 2014' template_vagrant.html

# TOC, TITLE and AUTHOR are not appropriate with HTML templates
cp report.do.txt report2.do.txt
doconce replace 'TITLE: '  '#TITLE: ' report2.do.txt
doconce replace 'AUTHOR: '  '#AUTHOR: ' report2.do.txt
doconce replace 'TOC: '  '#TOC: ' report2.do.txt
doconce format html report2 --html_style=bootstrap --html_template=template_vagrant.html
!ec
# #endif

"HTML Bootstrap style with fixed toc": "_static/report_bootstrap_wtoc.html" made from "DocOnce source": "_static/report.do.txt.html" with a "template file": "_static/template_boostrap_wtoc.html.html"

# #ifdef CODE
!bc sys
# Copy the style to the current working dir
cp -r /path/to/doconce/root/bundled/html_styles/style_bootstrap_wtoc/template_bootstrap_wtoc.html .
# Customize the template (perhaps easier in an interactive editor...)
doconce replace LogoWord 'DiffEq' template_bootstrap_wtoc.html
doconce replace withSubWord 'Project' template_bootstrap_wtoc.html
doconce replace '<a href="">GO TO 1</a>' '<a href="http://wikipedia.org">Wikipedia</a>' template_bootstrap_wtoc.html
doconce replace '<a href="">GO TO 2</a>' '<a href="http://wolframalpha.com">WolframAlpha</a>' template_bootstrap_wtoc.html
doconce subst '<!-- footer --> Here .+' 'H. P. Langtangen &copy; 2014' template_bootstrap_wtoc.html

# TOC, TITLE and AUTHOR are not appropriate with HTML templates
cp report.do.txt report2.do.txt
doconce replace 'TITLE: '  '#TITLE: ' report2.do.txt
doconce replace 'AUTHOR: '  '#AUTHOR: ' report2.do.txt
doconce replace 'TOC: '  '#TOC: ' report2.do.txt
doconce format html report2 --html_style=bootstrap --html_template=template_bootstrap_wtoc.html --pygments_html_style=none
# Note: pygments code typesetting interferes with MathJax for this style,
# so we turn off pygments (which means plain <pre> tags for code blocks)
!ec
# #endif

=== Other styles ===

"HTML (modified) GitHub minimal style": "_static/report_github_minimal.html" made from "DocOnce source": "_static/report.do.txt.html" with the "GitHub minimal theme template": "https://github.com/hplgit/doconce/blob/master/bundled/html_styles/style_github_minimal/template_github_minimal.html" (this template is best suited for a contents pages and not a full report)

# #ifdef CODE
!bc sys
# Copy the style to the current working dir
cp -r /path/to/doconce/root/bundled/html_styles/style_github_minimal .
# Make sure the css and js directories are local
mv style_github_minimal/css/* css/
mv style_github_minimal/js .
# Tailor headings in the template to this project
doconce replace 'Main Permanent Header' 'Project Report' style_github_minimal/template_github_minimal.html
doconce replace 'Permanent SubHeader' 'A Differential Equation Problem' style_github_minimal/template_github_minimal.html

cp report.do.txt report2.do.txt
doconce replace 'TITLE: '  '#TITLE: ' report2.do.txt
doconce replace 'AUTHOR: '  '#AUTHOR: ' report2.do.txt
doconce replace 'TOC: '  '#TOC: ' report2.do.txt

doconce format html report2 --html_template=style_github_minimal/template_github_minimal.html
# HTML code is in report.html; it needs the .png figures
# and the css and js directories
!ec
# #endif

"HTML Markdown style": "_static/report_md.html" made from "Markdown": "_static/report.md.html" generated from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format pandoc report
# Remove title, author, etc. (does not work well)
doconce subst '% .*' '' report.md
doconce md2html report
!ec
(One could (more naturally) use the `pandoc` program to transform the
`report.md` file in Markdown format to HTML, but `doconce md2html`
performs some additional hacks to get the mathematics to be rendered
correctly.)
# #endif

===== Other formats =====

=== IPython notebook ===

"IPython notebook": "http://nbviewer.ipython.org/url/hplgit.github.com/teamods/writing_reports/_static/report.ipynb" made from "IPython notebook .ipynb file": "_static/report.ipynb.html" generated from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format ipynb report
# Put report.ipynb on the web, e.g.,
# hplgit.github.com/teamods/writing_reports/_static/report.ipynb and
# then use the following URL to get the notebook rendered in a browser:
# http://nbviewer.ipython.org/url/hplgit.github.com/teamods/writing_reports/_static/report.ipynb
!ec
# #endif

=== Wiki ===

"MediaWiki": "https://github.com/hplgit/hplgit.github.com/wiki/Experiments-with-Schemes-for-Exponential-Decay" made from "MediaWiki format": "_static/report.mwiki.html" generated from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format mwiki report
cp report.mwiki /some/path/to/my/username.github.com.wiki/Experiments-with-Schemes-for-Exponential-Decay.mediawiki
!ec
# #endif

For reports without mathematics, DocOnce can also generate Googlecode
wiki format (used at `code.google.com`)
and the Creole wiki format (used at `bitbucket.org`).

=== Blog posts ===

"Google blog post at doconce.blogspot.com": "http://doconce-report-demo.blogspot.no/" based on on "HTML code": "_static/report_blogger.html.html" generated from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
cp report.do.txt report2.do.txt
# Remove title, author and date
doconce subst -m '^TITLE:.+$' '' report2.do.txt
doconce subst -m '^AUTHOR:.+$' '' report2.do.txt
doconce subst -m '^DATE:.+$' '' report2.do.txt
# Figures must have URLs to where they are stored on the web
site="https://raw.github.com/hplgit/hplgit.github.com"
dir="/master/teamods/writing_reports/_static"
for figname in BE FE CN error; do
  doconce replace "[$figname," "[$site/$dir/$figname.png," report2.do.txt
done
doconce format html report2
# Paste report2.html text into a new blog on your Google account
!ec
# #endif

"Wordpress blog post at doconcereportdemo.wordpress.com": "http://doconcereportdemo.wordpress.com/" based on "HTML code": "_static/report_wordpress.html.html" generated from "DocOnce source": "_static/report.do.txt.html"

# #ifdef CODE
!bc sys
doconce format html report2 --wordpress
# Paste report2.html into a new blog post on Wordpress
!ec
# #endif

# #ifdef CODE

===== Handling of literature citations =====

Bibliographic references in DocOnce files make use of information in "Publish": "https://bitbucket.org/logg/publish" database. Either you have your references already
in the Publish format, or you can transform a BibTeX file `refs.bib` to
Publish format by

!bc sys
publish import refs
!ec
This creates a file `papers.pub` that acts as the Publish database
(one can easily assign other filenames to the database).
Such a `.pub` file looks as follows:

!bc
* books
** A Primer on Scientific Programming With {P}ython
   key:       Langtangen_2012
   author:    H. P. Langtangen
   year:      2012
   publisher: Springer
   status:    published
   series:    Texts in Computational Science and Engineering
   edition:   Third
   entrytype: book
** A First Course in the Numerical Analysis of Differential Equations
   key:       Iserles_2009
   author:    A. Iserles
   year:      2009
   publisher: Cambridge University Press
   status:    published
   series:    Cambridge Texts in Applied Mathematics
   edition:   Second
   entrytype: book
!ec
The reason why DocOnce applies Publish is that it is easy to export
Publish references to BibTeX, HTML, reStructuredText, pure ascii, etc.

Next, we exemplify how to run `doconce` to produce a range of output
formats and many different layout styles within each format.
# #endif

# #ifndef CODE
!bbox
"Show how all the DocOnce formats are generated": "index_with_doconce_commands.html"!
!ebox
# #endif
